<template>
	<view class="container_full flex flex-direction">
		<c-menu-bar><text class="text-black text-df">培训</text></c-menu-bar>

		<c-refresh class="flex-sub" ref="refresh" @start="pullDownRefresh" @tolower="tolower">
			<!-- 轮播图 开始 -->
			<view class="carousel">
				<c-carousel
					:options="{
						height: 350,
						autoplay: true,
						circular: true,
						indicatorDots: true
					}"
					v-model="carousel.list"
					@click="carouselHandle"
				></c-carousel>
			</view>
			<!-- 轮播图 结束 -->

			<view class="w-100">
				<!-- 滚动公告 开始 -->
				<view class="flex-row padding-lr-sm">
					<c-notice-bar class="flex-sub radius" v-model="horn.list" color="#909399" background="#f4f4f5" @click="hornHandle"></c-notice-bar>
				</view>
				<!-- 滚动公告 结束 -->

				<!-- tab 开始 -->
				<view class="top">
					<view class="top1 margin-top padding-lr-sm padding-bottom-sm">
						<view class="title padding-sm flex-row align-center">
							<text class="text-lg text-bold text-black">{{ tab1.data.title }}</text>
							<text class="text-sm text-gray margin-left">{{ tab1.data.small_title }}</text>
						</view>

						<view class="content">
							<view class="row flex-row">
								<template v-for="(v, k) in tab1.data.list">
									<view :class="['col', 'tab-item', 'flex-sub', 'padding-lr', 'justify-center', 'radius', 'bg-gradual-' + tab1.colors[k]]" :key="k" v-if="k < 2">
										<text :class="['text-white', 'text-' + tab1.title_size[k], 'text-bold', 'text-center']">{{ v.title }}</text>
										<text class="text-white text-xs text-center">{{ v.small_title }}</text>
									</view>
								</template>
							</view>

							<view class="row flex-row margin-top-sm">
								<template v-for="(v, k) in tab1.data.list">
									<view :class="['col', 'tab-item', 'flex-sub', 'padding-lr', 'justify-center', 'radius', 'bg-gradual-' + tab1.colors[k]]" :key="k" v-if="k >= 2">
										<text :class="['text-white', 'text-' + tab1.title_size[k], 'text-bold', 'text-center']">{{ v.title }}</text>
										<text class="text-white text-xs text-center">{{ v.small_title }}</text>
									</view>
								</template>
							</view>
						</view>
					</view>

					<view class="top2 margin-top padding-lr-sm padding-bottom-sm">
						<view class="title padding-sm flex-row align-center">
							<text class="text-lg text-bold text-black">{{ tab2.data.title }}</text>
							<text class="text-sm text-gray margin-left">{{ tab2.data.small_title }}</text>
						</view>

						<view class="content">
							<view class="row flex-row">
								<template v-for="(v, k) in tab2.data.list">
									<view :class="['col', 'tab-item', 'flex-sub', 'padding-lr', 'justify-center', 'radius', 'bg-gradual-' + tab2.colors[k]]" :key="k">
										<text :class="['text-white', 'text-sm', 'text-bold', 'text-center']">{{ v.title }}</text>
										<text class="text-white text-xs text-center">{{ v.small_title }}</text>
									</view>
								</template>
							</view>
						</view>
					</view>
				</view>
				<!-- tab 结束 -->
			</view>

			<!-- 课程列表 开始 -->
			<view class="list w-100 margin-top padding-lr-sm">
				<view class="title padding-sm flex-row align-center"><text class="text-lg text-bold text-black">优选课程</text></view>

				<view class="content">
					<view class="list-item flex-row padding-tb-sm" v-for="(v, k) in list.data" :key="k">
						<view class="image padding-right"><image :src="v.image" class="cu-avatar-xl radius-xl" mode="aspectFill" alt="" /></view>
						<view class="content flex-sub flex-direction justify-start padding-top-xs">
							<view class="title">
								<text class="text-lg text-blod">{{ v.title }}</text>
							</view>
							<view class="other">
								<text class="text-xs margin-top-xs text-gray">{{ v.public ? '公开课' : '非公开课' }}</text>
								<text class="text-xs margin-top-xs">{{ v.time }}</text>
							</view>
						</view>
					</view>
				</view>

				<view class="load-more flex-row justify-center align-center"><c-load-more :status="list.status" :text="list.loadText" /></view>
			</view>
		</c-refresh>

		<c-tab-bar></c-tab-bar>
	</view>
</template>

<script>
import CIcon from '@/components/Icon'
import CRefresh from '@/components/Layout/refresh'
import CTabBar from '@/components/TabBar'
import CMenuBar from '@/components/MenuBar'
import CCarousel from '@/components/Carousel'
import CNoticeBar from '@/components/NoticeBar'
import CLoadMore from '@/components/LoadMore'

export default {
	components: { CMenuBar, CIcon, CTabBar, CRefresh, CCarousel, CNoticeBar, CLoadMore },
	data() {
		return {
			/**
			 * api
			 */
			api: null,

			carousel: uni.getStorageSync('IndexCarousel') ?? [],
			horn: uni.getStorageSync('IndexHorn') ?? {
				list: [],
				data: []
			},
			tab1: {
				cols: [6, 6, 4, 4, 4],
				colors: ['blue', 'pink', 'orange', 'purple', 'green'],
				title_size: ['lg', 'lg', 'sm', 'sm', 'sm'],
				data: uni.getStorageSync('IndexTop1') ?? []
			},
			tab2: {
				cols: [4, 4, 4],
				colors: ['red', 'orange', 'green'],
				data: uni.getStorageSync('IndexTop2') ?? []
			},

			list: {
				page: 1,
				limit: 10,
				total: null,
				status: 'loadmore',
				refresh: false,
				loadText: {
					loadmore: '上拉或点击加载更多',
					loading: '努力加载中',
					nomore: '好课更新中'
				},
				data: []
			}
		}
	},
	computed: {
		theme() {
			return this.$store.state.theme
		}
	},
	methods: {
		/**
		 * 初始化
		 */
		async init() {
			const {
				data: { Carousel, Horn, Top1, Top2 },
				success,
				msg
			} = await getApp().globalData.$api.commit('init')
			if (!success) {
				return false
			}

			this.carousel = Carousel
			uni.setStorageSync('IndexCarousel', Carousel)
			this.horn = Horn
			uni.setStorageSync('IndexHorn', Horn)
			this.tab1.data = Top1
			uni.setStorageSync('IndexTop1', Top1)
			this.tab2.data = Top2
			uni.setStorageSync('IndexTop2', Top2)
		},

		/**
		 * 列表查询
		 */
		async select(reload = false) {
			let {
				data: {
					data,
					pagination: { total }
				},
				success,
				msg
			} = await getApp().globalData.$api.commit('list', {
				page: this.list.page,
				limit: this.list.limit
			})
			if (!success) {
				return false
			}
			if (reload) {
				this.list.data = data
			} else {
				this.list.data = [...this.list.data, ...data]
			}
			this.list.total = total
		},

		/**
		 * 下拉监听
		 */
		async pullDownRefresh() {
			this.list.page = 1
			this.list.status = 'loadmore'

			this.init(true)
			await this.select(true)
			await getApp().globalData.$utils.setTimeout(0.6)
			this.$refs.refresh.end()
		},

		/**
		 * 上拉监听
		 */
		async tolower() {
			if (this.list.total && Math.ceil(this.list.total / this.list.limit) == this.list.page) {
				if (this.list.status != 'nomore') {
					this.list.status = 'loading'
					await getApp().globalData.$utils.setTimeout(1)
					this.list.status = 'nomore'
				}
			} else {
				this.list.page += 1
				this.list.status = 'loading'
				await this.select()
				this.list.status = 'loadmore'
			}
		},

		/**
		 * 轮播回调
		 * @param {Object} row
		 */
		carouselHandle(row) {
			console.log(row)
		},

		/**
		 * 滚动公告回调
		 * @param {Object} row
		 */
		hornHandle(row) {
			console.log(row)
		}
	},

	created() {
		this.init()
		this.select()
	}
}
</script>

<style scoped>
.row {
	margin-left: -10rpx;
	margin-right: -10rpx;
}

.col {
	margin-left: 10rpx;
	margin-right: 10rpx;
}

.tab-item {
	height: 120rpx;
}
</style>
